name: Deploy to Production Server
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file from GitHub Secrets
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}" >> .env
          echo "CERTBOT_EMAIL=${{ secrets.CERTBOT_EMAIL }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "ADMIN_USERNAME"=${{ secrets.ADMIN_USERNAME }}" >> .env
          echo "ADMIN_PASSWORD_HASH"=${{ secrets.ADMIN_PASSWORD_HASH }}" >> .env
          echo "FRONTEND_ORIGIN"=${{ secrets.FRONTEND_ORIGIN }}" >> .env

      # 현재 실행 중인 컨테이너 백업 (롤백용)
      - name: Backup current state
        run: |
          docker compose ps --format json > backup-state.json || echo "No previous containers"

      # 새 이미지 빌드 (기존 서비스는 유지)
      - name: Build new images
        run: |
          docker compose build --no-cache

      # 데이터베이스 마이그레이션 (백엔드만 임시로 시작)
      - name: Run database migrations
        run: |
          # DB가 실행 중이 아니면 시작
          docker compose up -d db
          sleep 10
          
          # 마이그레이션 실행
          docker compose run --rm backend alembic upgrade head

      # 전체 서비스 재시작
      - name: Deploy services with rolling update
        run: |
          docker compose up -d --remove-orphans

      # 성공 시 이전 이미지 정리
      - name: Clean up old Docker images
        run: |
          docker image prune -af
          docker system prune -f --volumes=false

      # 실패 시 롤백 (에러가 발생하면 이전 상태로 복원)
      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed, attempting rollback..."
          
          # 이전 컨테이너 상태가 있으면 복원 시도
          if [ -f backup-state.json ]; then
            docker compose down
            # 여기서는 단순히 다시 시작 (더 정교한 롤백 로직 필요시 추가)
            docker compose up -d
          fi
          
          echo "Rollback completed, please check the services manually"
